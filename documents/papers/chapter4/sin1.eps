%!PS-Adobe-2.0 EPSF-2.0
%%Title: sin1.eps
%%Creator: gnuplot 3.7 patchlevel 1 (+1.1.9 1999/11/08)
%%CreationDate: Mon Jun 24 19:15:28 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
/makecompfont {
15 dict begin
 findfont /kanjifont exch def
 findfont /asciifont exch def
 /FontType 0 def
 /WMode 0 def
 /FMapType 3 def
 /FontMatrix matrix def
 /Encoding [0 1] def
 /FDepVector
 [asciifont 1 scalefont
  kanjifont 1 scalefont] def
 dup /FontName exch def
 currentdict
end
definefont pop
} def
/Helvetica-Ryumin /Helvetica /Ryumin-Light-H makecompfont
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica-Ryumin) findfont 140 scalefont setfont
1.000 UL
LTb
574 280 M
63 0 V
6325 0 R
-63 0 V
 stroke
490 280 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (-1.5)]
] -46.7 MRshow
574 1045 M
63 0 V
6325 0 R
-63 0 V
 stroke
490 1045 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (-1)]
] -46.7 MRshow
574 1811 M
63 0 V
6325 0 R
-63 0 V
 stroke
490 1811 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (-0.5)]
] -46.7 MRshow
574 2576 M
63 0 V
6325 0 R
-63 0 V
 stroke
490 2576 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (0)]
] -46.7 MRshow
574 3341 M
63 0 V
6325 0 R
-63 0 V
 stroke
490 3341 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (0.5)]
] -46.7 MRshow
574 4107 M
63 0 V
6325 0 R
-63 0 V
 stroke
490 4107 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (1)]
] -46.7 MRshow
574 4872 M
63 0 V
6325 0 R
-63 0 V
 stroke
490 4872 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (1.5)]
] -46.7 MRshow
1213 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
1213 140 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (-4)]
] -46.7 MCshow
2490 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
2490 140 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (-2)]
] -46.7 MCshow
3768 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
3768 140 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (0)]
] -46.7 MCshow
5046 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
5046 140 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (2)]
] -46.7 MCshow
6323 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
6323 140 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (4)]
] -46.7 MCshow
1.000 UL
LTb
574 280 M
6388 0 V
0 4592 V
-6388 0 V
574 280 L
1.000 UL
LT0
6311 4739 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (sin\(x\))]
] -46.7 MRshow
6395 4739 M
399 0 V
574 4044 M
65 36 V
64 21 V
65 5 V
64 -10 V
65 -25 V
64 -41 V
65 -56 V
64 -70 V
65 -84 V
64 -96 V
65 -108 V
64 -118 V
65 -128 V
64 -136 V
65 -143 V
64 -148 V
65 -152 V
64 -153 V
65 -155 V
65 -154 V
64 -151 V
65 -147 V
64 -141 V
65 -135 V
64 -126 V
65 -116 V
64 -106 V
65 -94 V
64 -80 V
65 -67 V
64 -53 V
65 -38 V
64 -23 V
65 -7 V
64 9 V
65 24 V
64 39 V
65 55 V
64 68 V
65 82 V
65 95 V
64 107 V
65 118 V
64 127 V
65 135 V
64 142 V
65 148 V
64 151 V
65 154 V
64 154 V
65 154 V
64 151 V
65 148 V
64 142 V
65 135 V
64 127 V
65 118 V
64 107 V
65 95 V
65 82 V
64 68 V
65 55 V
64 39 V
65 24 V
64 9 V
65 -7 V
64 -23 V
65 -38 V
64 -53 V
65 -67 V
64 -80 V
65 -94 V
64 -106 V
65 -116 V
64 -126 V
65 -135 V
64 -141 V
65 -147 V
64 -151 V
65 -154 V
65 -155 V
64 -153 V
65 -152 V
64 -148 V
65 -143 V
64 -136 V
65 -128 V
64 -118 V
65 -108 V
64 -96 V
65 -84 V
64 -70 V
65 -56 V
64 -41 V
65 -25 V
64 -10 V
65 5 V
64 21 V
65 36 V
1.000 UL
LT1
6311 4599 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (cos\(x\))]
] -46.7 MRshow
6395 4599 M
399 0 V
574 3010 M
65 -150 V
64 -153 V
65 -155 V
64 -154 V
65 -152 V
64 -149 V
65 -144 V
64 -138 V
65 -130 V
64 -121 V
65 -111 V
64 -99 V
65 -87 V
64 -73 V
65 -59 V
64 -45 V
65 -29 V
64 -14 V
65 1 V
65 17 V
64 33 V
65 48 V
64 62 V
65 76 V
64 89 V
65 102 V
64 113 V
65 123 V
64 131 V
65 139 V
64 146 V
65 150 V
64 152 V
65 155 V
64 154 V
65 153 V
64 149 V
65 145 V
64 138 V
65 131 V
65 122 V
64 112 V
65 100 V
64 88 V
65 75 V
64 61 V
65 46 V
64 31 V
65 16 V
64 0 V
65 -16 V
64 -31 V
65 -46 V
64 -61 V
65 -75 V
64 -88 V
65 -100 V
64 -112 V
65 -122 V
65 -131 V
64 -138 V
65 -145 V
64 -149 V
65 -153 V
64 -154 V
65 -155 V
64 -152 V
65 -150 V
64 -146 V
65 -139 V
64 -131 V
65 -123 V
64 -113 V
65 -102 V
64 -89 V
65 -76 V
64 -62 V
65 -48 V
64 -33 V
65 -17 V
65 -1 V
64 14 V
65 29 V
64 45 V
65 59 V
64 73 V
65 87 V
64 99 V
65 111 V
64 121 V
65 130 V
64 138 V
65 144 V
64 149 V
65 152 V
64 154 V
65 155 V
64 153 V
65 150 V
1.000 UL
LT2
6311 4459 M
[ [(Helvetica-Ryumin) 140.0 0.0 true true (sin\(x\) + cos\(x\))]
] -46.7 MRshow
6395 4459 M
399 0 V
574 4478 M
65 -114 V
64 -132 V
65 -149 V
64 -165 V
65 -178 V
64 -190 V
65 -199 V
64 -208 V
65 -214 V
64 -217 V
65 -218 V
64 -218 V
65 -215 V
64 -209 V
65 -202 V
64 -193 V
65 -181 V
64 -168 V
65 -153 V
65 -136 V
64 -119 V
65 -99 V
64 -79 V
65 -59 V
64 -36 V
65 -15 V
64 7 V
65 29 V
64 51 V
65 72 V
64 92 V
65 112 V
64 131 V
65 147 V
64 163 V
65 177 V
64 189 V
65 199 V
64 207 V
65 213 V
65 217 V
64 218 V
65 218 V
64 215 V
65 210 V
64 203 V
65 194 V
64 182 V
65 169 V
64 155 V
65 138 V
64 121 V
65 101 V
64 81 V
65 61 V
64 39 V
65 17 V
64 -5 V
65 -27 V
65 -49 V
64 -70 V
65 -90 V
64 -110 V
65 -129 V
64 -145 V
65 -162 V
64 -175 V
65 -188 V
64 -198 V
65 -206 V
64 -213 V
65 -217 V
64 -218 V
65 -218 V
64 -215 V
65 -211 V
64 -204 V
65 -194 V
64 -184 V
65 -171 V
65 -156 V
64 -140 V
65 -122 V
64 -104 V
65 -83 V
64 -63 V
65 -41 V
64 -19 V
65 3 V
64 24 V
65 47 V
64 68 V
65 88 V
64 108 V
65 127 V
64 144 V
65 160 V
64 174 V
65 186 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica-Ryumin
